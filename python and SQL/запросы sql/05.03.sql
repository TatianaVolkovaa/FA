/*Волкова Татьяна, ПИ19-4, подгруппа 3, 05.03.21*/

/*
1) Составьте запрос для таблицы STUDENT таким образом, 
чтобы выходная таблица содержала один столбец, 
содержащий последовательность разделенных символом “;” 
(точка с запятой) значений всех столбцов этой таблицы; 
при этом текстовые значения должны отображаться прописными 
символами (верхний регистр), т. е. быть представленными в 
следующем виде:
10;КУЗНЕЦОВ;БОРИС;0;БРЯНСК; 8.12.1987;10.
*/
SELECT student_id || ';' || upper(surname) || ';' || 
	upper(name) || ';' || stipend || ';' || kurs  
	|| ';' || upper(city) || ';' || to_char(birthday, 'DD.MM.YYYY') 
	|| ';' || univ_id AS "info"
FROM student

/*
2) Составьте запрос для таблицы STUDENT таким образом, 
чтобы выходная таблица содержала всего один столбец в 
следующем виде:
Б.КУЗНЕЦОВ; место жительства - БРЯНСК; родился - 8.12.87.
*/
SELECT substr(name, 1, 1) || '.' || upper(surname) 
	|| '; место жительства - ' || upper(city) 
	|| '; родился - ' || to_char(birthday, 'DD.MM.YY')
	AS "info"
FROM student

/*
3) Составьте запрос для таблицы STUDENT таким образом,
чтобы выходная таблица содержала всего один столбец 
в следующем виде:
б.кузнецов; место жительства - брянск; родился: 8-дек-1987.
*/
SELECT lower(substr(name, 1, 1)) || '.' || lower(surname) 
	|| '; место жительства - ' || lower(city) 
	|| '; родился - ' || to_char(birthday, 'DD-Mon-YYYY')
	AS "info"
FROM student

/*
4) Составьте запрос для таблицы STUDENT таким образом,
чтобы выходная таблица содержала всего один столбец 
в следующем виде:
Борис Кузнецов родился в 1987 году.
*/
SELECT name || ' ' || surname || ' родился в ' 
	|| to_char(birthday, 'YYYY') || ' году.'
	AS info
FROM student

/*
5) Составьте запрос, выводящий фамилии, имена студентов 
и величину получаемых ими стипендий, 
при этом значения стипендий должны быть увеличены 
в 100 раз.
*/
SELECT surname, name, stipend*100
FROM student

/*
6) То же, что и в упр. 4, но только для студентов 
1, 2 и 4 курсов и таким образом, чтобы фамилии и 
имена были выведены прописными буквами.
*/
SELECT upper(name) || ' ' || upper(surname) || ' родился в ' 
	|| to_char(birthday, 'YYYY') || ' году.'
	AS info
FROM student
WHERE kurs IN (1, 2, 4)

/*
7) Составьте запрос для таблицы UNIVERSLTY таким образом, 
чтобы выходная таблица содержала всего один столбец в
слсдующсм виде :
Код-10; ВГУ-г.ВОРОНЕЖ; Рейтинг=296.
*/
SELECT 'Код-' || univ_id || '; ' || univ_name || '-г.' ||
	upper(city) || '; Рейтинг=' || rating || '.'
	AS info
FROM university

/*
8) Тоже, что и в задаче 7, но значения рейтинга 
требуется окрутлить до первого знака 
(например, значение 382 окрутлястся до 400).
*/
SELECT 'Код-' || univ_id || '; ' || univ_name || '-г.' ||
	upper(city) || '; Рейтинг=' || round(rating, -2) || '.'
	AS info
FROM university

/*
9)Напишите запрос для подсчета количества студентов, 
сдававших экзамен по предмету обучения с 
идентификатором, равным 20.
*/
SELECT COUNT(student_id)
FROM exam_marks
WHERE subj_id = 20
AND mark > 2
GROUP BY subj_id;

/*
10) Напишите запрос, который позволяет подсчитать в 
таблице ЕХАМ MARKS количество различных предметов обучения.
*/
SELECT COUNT(DISTINCT subj_id)
FROM exam_marks;

/*
11) Напишите запрос, который выполняет выборку для 
каждого студента значения его идентификатора 
и минимальной из полученных им оценок.
*/
SELECT student_id, min(mark)
FROM exam_marks
GROUP BY student_id;

/*
12) Напишите запрос, который выполняет выборку для 
каждого студента значения его идентификатора и 
максимальной из полученных им оценок.
*/
SELECT student_id, max(mark)
FROM exam_marks
GROUP BY student_id;

/*
13) Напишитс запрос, выполняющий вывод фамилии 
первого в алфавитном порядке (по фамилии) студента, 
фамилия которого начинается на букву И
*/
SELECT MAX(surname)
FROM student
WHERE surname LIKE "И%";
/*или*/
SELECT surname
FROM student
WHERE INSTR(surname, 'И') = 1
ORDER BY surname
LIMIT 1;

/*
14) Напишите запрос, выполняет вывод для каждого 
предмета обучения наименование предмета и максимальное 
значение номера семестра, в котором этот предмет преподается
*/
SELECT subj_name, MAX(semester)
FROM subject
GROUP BY semester;

/*
15) Напишите запрос, который выполняет вывод данных 
для каждого конкретного дня сдачи экзамена о 
количестве студентов, сдававших экзамен в этот день.
*/
SELECT exam_date, count(student_id), exam_id
FROM exam_marks
GROUP BY exam_date;

/*
16) Напишите запрос для получения среднего балла для 
каждого курса по каждому прeдмсту.
!!!(в таблице exam_marks нет курса, поэтому по каждому курсу не получится
*/
SELECT subj_id, AVG(mark)
FROM exam_marks
GROUP BY subj_id;

/*
17) Напишите запрос для получения среднего балла для 
каждого студента.
*/
SELECT student_id, AVG(mark)
FROM exam_marks
GROUP BY student_id;

/*
18) Напишите запрос для получения среднего балла для 
каждого экзамена.
*/
SELECT exam_id, AVG(mark)
FROM exam_marks
GROUP BY exam_id;

/*
19) Напишите запрос для определения количества студентов, 
сдававших каждый экзамен.
*/
SELECT exam_id, count(student_id)
FROM exam_marks
WHERE mark > 2
GROUP BY exam_id;

/*
20) Напишите запрос для определения количества изучаемых 
предметов на каждом курсе.
!!!(сделала в каждом семестре, а не курсе, т.к в табличке 
subject предметы идут по семестрам
*/
SELECT semester, count(subj_id)
FROM subject
GROUP BY semester;